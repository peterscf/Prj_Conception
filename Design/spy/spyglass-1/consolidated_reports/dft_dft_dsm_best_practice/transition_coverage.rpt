################################################################################
#
# This file has been generated by SpyGlass:
#     Report Created by: xph2app003
#     Report Created on: Tue Jun  6 10:56:08 2017
#     Working Directory: /tp/xph2app/xph2app003/Prj_conception/Design/spy
#     Report Location  : ./spyglass-1/dft/dft_dsm_best_practice/spyglass_reports/dft_dsm/transition_coverage.rpt
#     SpyGlass Version : 5.6.0
#     Policy Name      : dft_dsm(5.6.0)
#     Comment          : Generated by rule Info_transitionCoverage
#
################################################################################

################################################################################
# Purpose :
#     Transition fault coverage report.
#     Lists the transition faults associated with the module.
################################################################################


################################################################################
# Format :
#     The definition of various kinds of transition faults is given.
#     This is followed by a tabular information of the count of transition faults
#     associated with each module in the design.
################################################################################
 <>ABBREVIATIONS & DEFINITIONS OF TERMS : 
       1. hierarchical instance : an instance which has other hierarchical instances
                           and/or basic cells within it.

       2. DT fault     :   Faults which are either 1->0 transition detectable or 
                           0->1 detectable.

       3. !DT/ND fault :   Faults which are neither 1->0 transition detectable or 
                           0->1 detectable.

       4. UT fault     :   Faults which are
                           1. Tied to constant value
                           2. Driving only asynchronous pins of scan flip-flops
                           3. Acting as clock enable logic.

       5. UU fault     :   An unused fault. Fault at a terminal becomes UU if that terminal
                           cannot be reached from the output ports. They are ignored because
                           they cannot affect system operation. By default, latches / 
                           blackboxes, whose outputs fanout to SyRd nodes only, and their 
                           fanin cone can be UU. If parameter dftUUMarking is set to 'on' then 
                           flip-flops, whose outputs fanout to SyRd nodes only, and their fanin
                           cone can be UU. 

       6. SyRd fault   :   Faults at terminals which are Sy[= synthesis]Rd[= redundant].
                           These are terminals which are likely to be removed by an 
                           optimizing synthesizer, and hence should not be considered 
                           for fault/test coverage analysis. These are of the following types:
                           a) Pins which are tied high/low,
                           b) Pins blocked in power ground mode, and 
                           c) Unconnected combinational logic - all logic combinationally
                           connected to nodes that do not fanout to primary port. 

       7. LR fault     :   These are logically redundant faults. Whatever be the state
                           of circuit, output on such nodes will always be a fixed 
                           value or are blocked by such fixed value nodes.

       8. FP fault     :   These are the faults which lie on false/multi-cycle path 
                           False paths can be specified through SDC file or through
                           'false_path' sgdc command.
       9. TI/BL fault  :   This fault class comprises of faults which arise because of nets
                           being tied to 0 (Low) or 1(High), and the logic blocked by such nets.
                           If a net is either tied to 0 or 1, both t/01 and t/10 faults on the
                           corresponding fault-node are TIED. 
                           An input of a combinational gate tied to an appropriate value will 
                           make the faults in the fanin-cone of the other input as blocked. 
                           For example, an input of an AND gate tied to 0, will make faults 
                           in fanin-cone of the other input BLOCKED. 

                           

    FORMULAE USED : 

                                Transition Detectable Fault Count 
    Fault-Coverage(FC) % =  ------------------------------------------------------------------------------------------- x 100
                                (2*terminalCount) - SyRd_faultCount - FPCount

                                Transition Detectable Fault Count 
    Test-Coverage(TC)  % =  ------------------------------------------------------------------------------------------- x 100
                                (2*terminalCount) - SyRd_faultCount - TICount - BLCount - UUCount - FPCount - LRCount



 <>For top module the summary has been reported in three columns as follows:
    Column 1: fault and coverage data due to top-level ports and internal design.
    Column 2: fault and coverage data due to top-level ports only.
    Column 3: fault and coverage data due to internal design only.

 <>For each module and hierarchical instance, eleven numbers are reported. These are (in order)
    1. Count of terminals (IT) within the module (or instance) 
    2. Count of synth-redundant faults (SR) within the module (or instance)
    3. Count of faults considered (FC) within the module (or instance)      
    4. Count of unused (UU) faults within the module (or instance)
    5. Count of tied faults (TI) faults within this module (or instance)
    6. Count of blocked faults (BL) faults within this module (or instance)
    7. Count of false path faults (FP) faults within this module (or instance)
    8. Count of logical redundant fault (LR) within this module (or instance)
    9. Count of untestable faults (UT) faults within this module (or instance)
   10. Count of detectable (DT) faults within this module (or instance)
   11. Count of undetectable (!DT) faults within this module (or instance)

<> Alongside each module (and hierarchical instance) there is a search-key, of the form
             Module_[moduleIndex]  | Inst_[moduleIndex]_[instIndex]

  When opened in a text-editor, this key can be used to jump to the next (and only other)
  reference to the module (or instance) in the file. If an instance does NOT have a key
  then it means that this hierarchical instance has no hierarchical instances within it.

PS:The instance names have been wrapped around to the next line in order to maintain the
   clarity of the Table.

  ---------------------------------------   END    ----------------------------------------
<>TOP MODULE SUMMARY for 'CORDIC_top'
  ATSPEED LAUNCH METHOD : 'LAUNCH_ON_CAPTURE'

		  Fault Heads                  |    Total   |   Ports    |  Internal  |

		Total faults                   |        5124|          52|        5072|
		SyRd faults                    |         418|           0|         418|
		Faults Considered              |        4706|          52|        4654|
		Un-Used (UU)                   |           0|           0|           0|
		Tied (TI)                      |           0|           0|           0|
		Blocked (BL)                   |           0|           0|           0|
		False path faults (FP)         |           0|           0|           0|
		Logical Redundant faults (LR)  |           0|           0|           0|
		Un-Testable (UT)               |           0|           0|           0|
		Detectable (DT)                |           0|           0|           0|
		Un-Detectable (!DT)            |        4706|          52|        4654|
		Fault-coverage(in %)           |         0.0|         0.0|         0.0|
		Test-coverage(in %)            |         0.0|         0.0|         0.0|


